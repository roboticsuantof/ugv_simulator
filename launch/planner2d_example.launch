<launch>
    <arg name="map_name"            default="test_pv_map.pgm"/>
    <arg name="map"                 default="$(find ugv_simulator)/2dmaps/$(arg map_name).yaml"/>
    <arg name="algorithm_name"      default="costastar"/>
    <arg name="use_costs"           default="true"/>
    <!-- This param is very important -->   
    <arg name="use3d"               default="false"/>

    <arg name="world_size_x"        default="151.75"/>
    <arg name="world_size_y"        default="103.1"/>
    <arg name="resolution"          default="0.05"/>
    <arg name="world_size_z"        default="$(arg resolution)"/>

    <arg name="inflate_map"         default="false"/>
    <arg name="inflation_size"      default="$(arg resolution)"/>

    <arg name="save_data"           default="false"/>
    <!-- This should be a folder -->
    <arg name="data_folder"         default="$(env HOME)"/>
    <arg name="overlay_markers"     default="false"/>

    <arg name="cost_weight" default="2.0"/>
    <arg name="max_line_of_sight_distance" default="1.0"/>

    <arg name="cost_scaling_factor" default="0.8"/>
    <arg name="robot_radius"        default="0.4"/>

    <!-- Map server to publish 2d occupancy grid in the /map topic by default -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map)">
    <param name="frame_id" value="world" />
    </node>

    <arg name="costmap_params_file" default="test_pv_map.pgm_costmap_params"/>
    <!-- This TF is mandatory to make costmap run properly (only work with tf, not with tf2)... -->
    <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="87.7 58.6 0 0 0 0 world odom 10" if="$(arg use_costs)"/>
    <node pkg="costmap_2d" type="costmap_2d_node"    name="costmap_2d"                                        if="$(arg use_costs)">
        <rosparam command="load" file="$(find ugv_simulator)/config/$(arg costmap_params_file).yaml"/>
        <param name="frame_id" value="world" />
    </node>

    <arg name="output" default="screen"/>
    <node pkg="heuristic_planners" type="planner_ros_node" name="planner_ros_node" output="$(arg output)" >
        <remap from="points" to="/os1_cloud_node_points"/> 
        <remap from="grid" to="/map"                        unless="$(arg use_costs)"/>
        <remap from="grid" to="/costmap_2d/costmap/costmap" if="$(arg use_costs)"/>
        <param name="map_path"              value="$(arg map)"/>
        <param name="world_size_x"          value="$(arg world_size_x)"/>
        <param name="world_size_y"          value="$(arg world_size_y)"/>
        <param name="world_size_z"          value="$(arg world_size_z)"/>
        <param name="resolution"            value="$(arg resolution)"/>
        <param name="inflate_map"           value="$(arg inflate_map)"/>
        <param name="inflation_size"        value="$(arg inflation_size)"/>
        <param name="frame_id" value="world" />
        <param name="save_data_file"     value="$(arg save_data)"/>
        <param name="data_folder"           value="$(arg data_folder)"/>
        <param name="overlay_markers"       value="$(arg overlay_markers)"/>
        <param name="algorithm"             value="$(arg algorithm_name)"/>
        <param name="use3d"                 value="$(arg use3d)"/>

        <param name="cost_weight"                  value="$(arg cost_weight)"/>
        <param name="max_line_of_sight_distance"   value="$(arg max_line_of_sight_distance)"/>

        <param name="cost_scaling_factor"   value="$(arg cost_scaling_factor)"/>
        <param name="robot_radius"          value="$(arg robot_radius)"/>
    </node>

    <!--node pkg="rviz" name="rviz" type="rviz" args="-d $(find heuristic_planners)/rviz/planners_2d.rviz"/-->

    <!-- <node pkg="rqt_service_caller" type="rqt_service_caller" name="rqt_service_caller"/> -->


</launch>
